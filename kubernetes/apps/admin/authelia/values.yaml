---
# yaml-language-server: $schema=https://raw.githubusercontent.com/authelia/chartrepo/refs/tags/authelia-0.10.46/charts/authelia/values.schema.json
image:
  repository: authelia/authelia
  tag: 4.39.13
pod:
  kind: Deployment
  strategy:
    type: Recreate
  env:
    - name: TZ
      value: America/Toronto

  extraVolumeMounts:
    - name: authelia-users
      mountPath: /config
    - name: authelia-persist
      mountPath: /data

  extraVolumes:
    - name: authelia-users
      configMap:
        name: authelia-users
        items:
          - key: users_database.yml
            path: users_database.yml
    - name: authelia-persist
      persistentVolumeClaim:
        claimName: authelia-data

ingress:
  enabled: true
  tls:
    enabled: false

  traefikCRD:
    enabled: true
    entryPoints: [websecure-ext, websecure]

configMap:
  totp:
    issuer: "${domain}"

  duo_api:
    enabled: true
    hostname: ${authelia_duo_hostname}
    integration_key: ${authelia_duo_integration_key}
    enable_self_enrollment: false
    secret:
      value: ${authelia_duo_secret_key}

  authentication_backend:
    password_reset:
      disable: true
    ldap:
      enabled: false
    file:
      enabled: true
      path: /config/users_database.yml
      password:
        algorithm: argon2

  access_control:
    default_policy: deny
    rules:
      - domain: "sonarr.${domain}"
        policy: bypass
        resources:
          - '^/api.*$'

      - domain: "radarr.${domain}"
        policy: bypass
        resources:
          - '^/api.*$'

      - domain: "bazarr.${domain}"
        policy: bypass
        resources:
          - '^/api.*$'

      - domain: "prowlarr.${domain}"
        policy: bypass
        resources:
          - '^/api.*$'

      - domain: "qb.${domain}"
        policy: bypass
        resources:
          - '^/api.*$'

      ## Rules applied to everyone
      - domain: "*.${domain}"
        policy: two_factor


  session:
    cookies:
      - domain: "${domain}"
        subdomain: login
        default_redirection_url: "https://${domain}"
    redis:
      enabled: false

  storage:
    encryption_key:
      value: "${authelia_storage_encryption_key}"
    local:
      enabled: true
      path: /data/db.sqlite3
    postgres:
      enabled: false

  notifier:
    smtp:
      enabled: true
      address: 'smtp://${authelia_smtp_server}:587'
      sender: "Authelia <${authelia_smtp_email}>"
      username: ${authelia_smtp_email}
      timeout: '15 seconds'
      password: ${authelia_smtp_password}

  identity_providers:
    oidc:
      enabled: true
      jwks:
        - key_id: default
          algorithm: RS256
          use: sig
          key: { path: /secrets/oidc-jwk/private.pem }
      clients: []

secret:
  additionalSecrets:
    oidc-jwk:
      items:
        - key: private.pem
          path: private.pem
